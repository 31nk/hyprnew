import{_ as t,s as e,x as s,f as i,n as a}from"./icon-ada4cc58.js";import{t as r,aP as n,aU as o,m as l,C as c,E as d,q as h,W as p,a7 as u,h as b}from"./shell-9a3ad68e.js";import{a as m}from"./dom-37d48515.js";import{P as f}from"./pdp-b6746f62.js";import{O as g}from"./outbound-link-tracking-controller-123a8b1b.js";import"./faceplate-tabgroup-af375457.js";import"./faceplate-tabpanel-d2f8372a.js";import"./pdp-right-rail-post-translator-58d22139.js";import{E as v}from"./entities-translator-df0f01c4.js";import"./klp-sidebar-list-9c2fcae0.js";import"./faceplate-tablist-ed55a952.js";import"./pageable-832f4cce.js";import"./base-translator-1f59220f.js";import"./list-item-92483316.js";var k;const C=["global/view/discovery_unit","right_rail/click/panel_tab","right_rail/view/panel_tab","post/view/post","post/consume/post","post/click/post","post/click/subreddit","post/click/comments"];let E=k=class extends e{get expandButtonElm(){return this.querySelector('[slot="expand-button"]')}get rightRailContainerElm(){return m(this,"#right-sidebar-container")}get subredditHeaderContainerElm(){return m(this,"shreddit-subreddit-header")?.parentNode}get chainedRelatedPostElm(){return m(this,`#${f}`)}constructor(){super(),this.tabPanelsRef=n(),this.tabSelectCallback=t=>{for(const e of t)if("attributes"===e.type&&"faceplate-tab-selected"===e.attributeName&&e.target.nodeType===Node.ELEMENT_NODE){e.target.hasAttribute("faceplate-tab-selected")&&this.handleTabSelect(e.target)}},this.tabSelectObserver=new MutationObserver(this.tabSelectCallback),this.handlePDPRightRailTelemetry=t=>{const e=t.detail.details||t.detail;if(s=e,!C.includes(l(s)))return;var s;let i;try{const e=t?.target,s=e?.closest("span[event-data]")?.getAttribute("event-data")??e?.closest("reddit-pdp-right-rail-post")?.getAttribute("event-data");i=s?JSON.parse(decodeURIComponent(s)):{}}catch{i={}}e.action_info={...e.action_info,...i.action_info,type:"right_rail"},"post"===e.source&&(e.post=i.post||{},e.subreddit=i.subreddit||{})},this.handleTabSelect=t=>{const e=t.slot;e&&this.querySelector(`[slot="tab-panel"] [slot="${e}"] faceplate-partial[loading="programmatic"]`)?.load()},this.handleButtonClick=t=>{t.preventDefault()},this.handleExpandButtonClick=()=>{this.querySelectorAll("ul > li.hidden").forEach((t=>{t.classList.remove("hidden")})),this.querySelectorAll("ul > li hr.hidden").forEach((t=>{t.classList.remove("hidden")})),this.expandButtonElm?.remove()},this.addEventListener("faceplate-track",this.handlePDPRightRailTelemetry),this.addEventListener("track-event",this.handlePDPRightRailTelemetry)}firstUpdated(){this.querySelector('[slot="tabs"]')?.addEventListener("click",this.handleButtonClick),this.expandButtonElm?.addEventListener("click",this.handleExpandButtonClick)}connectedCallback(){super.connectedCallback(),this.resetRightRailElements(),this.tabSelectObserver.observe(this,k.tabSelectObserverOptions)}disconnectedCallback(){super.disconnectedCallback(),this.tabSelectObserver.disconnect(),this.querySelector('[slot="tabs"]')?.removeEventListener?.("click",this.handleButtonClick)}resetRightRailElements(){if(this.chainedRelatedPostElm)return;const t=this.rightRailContainerElm,e=this.subredditHeaderContainerElm;this.rightRailContainerElm&&e&&t?.insertBefore(e,this.rightRailContainerElm.firstChild);const s=document.querySelectorAll('[data-testid="related-klps-sidebar"]');2===s.length&&s[1].remove()}render(){return s`\n <div>\n <slot name="tabs" class="block sticky z-[1] top-0 bg-neutral-background"></slot>\n <div ${o(this.tabPanelsRef)} class="pt-sm">\n <slot name="tab-panel"></slot>\n </div>\n <slot name="expand-button"></slot>\n </div>\n `}};E.styles=[r],E.tabSelectObserverOptions={childList:!0,subtree:!0,attributes:!0,attributeFilter:["faceplate-tab-selected"]},E=k=t([i("pdp-right-rail")],E);class y extends c{constructor(t,e){super(t),this.events=new d(this,(()=>this._host)),this.handleMouseClick=(t,e)=>{if(!e.query)return;const s=t.composedPath();for(const i of s){if(!(i instanceof HTMLAnchorElement))continue;const s=i.getAttribute("href");if(s&&(!e.pattern||e.pattern.test(s))){const i=this.getNewUrl(s,e.query);return t.preventDefault(),this.assignLocation(i)}}},this.events.define("click",(t=>{this.handleMouseClick(t,e())}))}getNewUrl(t,e){if(t.startsWith("/")&&(t=window.location.origin+t),!t||!e)return t;const s=new URL(t),i=new URLSearchParams(s.search);for(const[t,s]of e)i.set(t,s);return s.search=i.toString(),s.toString()}assignLocation(t){window.location.assign(t)}}const S=h(p(e));window.addEventListener("afterRoute",(function(){const t=new URL(window.location.href);t.searchParams.has("chainedPosts")&&(t.searchParams.delete("chainedPosts"),window.history.replaceState({},"",t.toString()))}));let R=class extends S{constructor(){super(...arguments),this.postId="",this.chainedPostIds="",this.consumeTimeoutId=null,this._outboundLinkTrackingController=new g(this,(()=>({pageType:u(),postId:this.postId}))),this._linkClickController=new y(this,(()=>({query:new Map([["chainedPosts",this.chainedPostIds]]),pattern:/\/comments\/([a-zA-Z0-9_]+)\//})))}connectedCallback(){super.connectedCallback(),this.enableObserver()}disconnectedCallback(){super.disconnectedCallback(),this.disableObserver(),this.clearConsumeTimeout()}clearConsumeTimeout(){this.consumeTimeoutId&&(clearTimeout(this.consumeTimeoutId),this.consumeTimeoutId=null)}observerIsIntersectingCallback(){this.consumeTimeoutId=setTimeout((()=>{this.trackEvent(b({source:"post",action:"consume",noun:"post"}))}),2e3)}observerIsNotIntersectingCallback(){this.clearConsumeTimeout()}createRenderRoot(){return this}};t([a({type:String,attribute:"post-id"})],R.prototype,"postId",void 0),t([a({type:String,attribute:"chained-ids"})],R.prototype,"chainedPostIds",void 0),R=t([i("reddit-pdp-right-rail-post")],R);let T=class extends v{getTranslatableEntities(){const t=this.querySelectorAll(".i18n-right-rail-topic-name");return Array.from(t).filter((t=>t.innerHTML)).map((t=>({id:t.id,node:t,originalValue:t.innerHTML,render:(t,e)=>{t.innerHTML=e}})))}async fetchTranslatableEntities(t){return this.fetchArbitraryStrings(t)}render(){return s`<div><slot></slot></div>`}};T=t([i("pdp-right-rail-topic-translator")],T);
//# sourceMappingURL=pdp-right-rail-content-client-js-18bafbe5.js.map
