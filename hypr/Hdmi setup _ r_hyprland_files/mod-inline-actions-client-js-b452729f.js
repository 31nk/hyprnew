import"./faceplate-date-ea2beded.js";import"./faceplate-timeago-c21dd98e.js";import"./faceplate-dropdown-menu-f53b9d9c.js";import"./faceplate-menu-255c99e7.js";import"./faceplate-shimmer-72ab8c98.js";import"./faceplate-tooltip-c7716df6.js";import"./post-mod-actions-menu-805dc1a6.js";import{x as t,as as e,I as o,q as i,ct as s,b2 as n,aZ as a,aC as r,aS as d,$ as l,cu as c,i as h,_ as p,n as m,h as u,s as b,f as v,E as f,a0 as y,A as g}from"./icon-ada4cc58.js";import{a as R,bJ as A,cf as S,k as w,_ as k,t as $,l as C}from"./shell-9a3ad68e.js";import{A as j,i as O}from"./mod-actions-controller-8e16e7f6.js";import{H as P}from"./mod-actions-menu-d923aec5.js";import{C as x}from"./comment-f86d3e04.js";import{M as I}from"./modActions-32f7f996.js";import{P as U}from"./post-69fe4f77.js";import{P as M}from"./postUpdate-2d784242.js";import{M as B,s as E,a as z,b as V,c as T,d as D,e as H}from"./mod-verdict-dcb43309.js";import"./shreddit-comment-share-button-cc6b8d26.js";import"./shreddit-post-share-button-fd82e22b.js";import"./locale-e49f0b05.js";import"./relative-date-77173042.js";import"./cached-intl-e5b35306.js";import"./popper-controller-2f3aa0ff.js";import"./makeEventDispatcher-28989282.js";import"./list-item-92483316.js";import"./custom-event-8a5c1c61.js";import"./add-removal-reason-modal-17a54e0c.js";import"./modActions-86176a37.js";import"./keyed-b6c942f1.js";import"./faceplate-form-cfb6343e.js";import"./form-common-utils-4dba185c.js";import"./post-edb43578.js";import"./faceplate-input-6aaf6007.js";import"./input-element-7c19d628.js";import"./rpl-tooltip-6ff0c4c3.js";import"./contains-1042b204.js";import"./dropdownButton-4fb00ad8.js";import"./faceplate-modal-71a626e6.js";import"./faceplate-textarea-input-ced9fd8a.js";import"./live-f7f79f15.js";import"./text-input-8201e088.js";import"./constants-abdf2fa9.js";import"./remove-highlighted-post-960b6aab.js";import"./utils-147dae00.js";import"./utils-75a02ea9.js";import"./pdp-b6746f62.js";import"./throttle-cde4a556.js";import"./click-card-8df0732f.js";import"./faceplate-hovercard-26cd8885.js";import"./content-action-button-d17c08ad.js";import"./faceplate-bottom-sheet-fe8741d1.js";import"./TinyGesture-6f7cc1aa.js";import"./faceplate-bottom-sheet-header-8ea66cd2.js";import"./with-share-4fce4a12.js";import"./a-459e5e7b.js";import"./index-6b6f75e3.js";import"./comments-00c68d93.js";let F=class extends(R(b)){constructor(){super(...arguments),this.feedViewType=A.ModQueueCompactView,this.viewContext=U.CommentsPage,this.itemState=B.UNMODERATED,this.hasReports=!1,this.isModMode=!1,this.isRemoved=!1,this.isDeleted=!1,this.isLocked=!1,this.isStickied=!1,this.isHighlighted=!1,this.isCurrentUserAuthor=!1,this.hasParent=!1,this.isIconOnly=!1,this.hasRemovalReason=!1,this.permalink="",this.isDesktopViewport=!1,this.isSpamFilteredPost=!1,this.isProfilePost=!1,this.isPromotedPost=!1,this.hasFlairPermissions=!1,this.areHighlightsEnabled=!1,this.borderedActionBar=!1,this.hideInlineActions=!1,this.moderationState=B.UNMODERATED,this._handleThingUpdate=t=>{let e="";if("awardOnContentId"in t?e=t.awardOnContentId:"commentId"in t?e=t.commentId:"postId"in t&&(e=t.postId),e!==this.thingId)return;const{value:o}=t;switch(t.action){case M.approve:case x.approve:case j.approve:this.hasRemovalReason=!1,this.isRemoved=!1,this.moderationState=B.APPROVED;break;case M.remove:case M.removeAsSpam:case M.confirmRemoval:case x.remove:case x.removeAsSpam:case x.confirmRemoval:case j.remove:case j.confirmRemoval:this.isRemoved=!0,this.moderationState=B.REMOVED;break;case M.addRemovalReason:case x.addRemovalReason:this.hasRemovalReason=!0;break;case M.updateHighlightedPost:this.isHighlighted=o;break;case M.lock:case x.lock:this.isLocked=o;break;case M.delete:this.isDeleted=o;break;case M.sticky:case x.sticky:this.isStickied=o}}}get itemType(){return this.thingId?O(this.thingId):null}get isPost(){return this.itemType===S.Post}get isCompactView(){return this.feedViewType===A.CompactView}get isOnModqueuePage(){return this.viewContext===U.ModQueue||this.viewContext===U.ModQueueAll}get isApproved(){return this.moderationState===B.APPROVED}get shouldShowConfirmRemoval(){return E(this.moderationState,this.isSpamFilteredPost)}get shouldShowActionInline(){return z(this.viewContext,this.feedViewType)&&!this.isIconOnly&&!this.hideInlineActions}get isStickyable(){const t=!(this.viewContext===U.ProfileFeed||this.viewContext===U.ProfileFeed2),e=this.isCurrentUserAuthor&&!this.hasParent;return this.isPost?t:t&&e}get itemTopic(){switch(this.itemType){case S.Award:return w.AwardOnContentUpdated;case S.Comment:return w.CommentUpdated;case S.Post:return w.PostUpdated;default:return null}}connectedCallback(){super.connectedCallback(),this.moderationState=this.itemState,this.itemTopic&&this.subscribe(this.itemTopic,this._handleThingUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.itemTopic&&this.unsubscribe(this.itemTopic,this._handleThingUpdate)}getApproveButtonAppearance(){return this.isCompactView?this.borderedActionBar?"bordered":"secondary":this.shouldShowConfirmRemoval||this.hasReports?"primary":(this.moderationState,B.REMOVED,"secondary")}renderApproveAction(){return(this.isModMode||this.isOnModqueuePage)&&V(this.moderationState)?t`\n <mod-action-button \n aria-label="Approve content" \n data-mod-action="${I.ApproveContent}" \n button-appearance="${this.getApproveButtonAppearance()}" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${e({attributes:{"aria-hidden":"true"},size:o.Small})}</span>\n <span slot="text">Approve</span>\n </mod-action-button>\n `:null}getRemoveButtonAppearance(){return this.isCompactView?this.borderedActionBar?"bordered":"secondary":(this.isApproved||this.hasReports,"secondary")}renderRemoveAction(){return(this.isModMode||this.isOnModqueuePage)&&T(this.moderationState)?t`\n <mod-action-button \n aria-label="Remove content" \n data-mod-action="${I.RemoveContent}" \n button-appearance="${this.getRemoveButtonAppearance()}" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${i({attributes:{"aria-hidden":"true"},size:o.Small})}</span>\n <span slot="text">\n Remove\n </span>\n </mod-action-button>\n `:null}renderConfirmRemovalAction(){return(this.isModMode||this.isOnModqueuePage)&&this.shouldShowConfirmRemoval?t`\n <mod-action-button \n aria-label="Confirm Removal" \n data-mod-action="${I.ConfirmRemoval}" \n button-appearance="secondary" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${i({attributes:{"aria-hidden":"true"},size:o.Small})}</span>\n <span slot="text">\n Confirm Removal\n </span>\n </mod-action-button>\n `:null}renderSpamAction(){return D({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline?t`\n <mod-action-button \n aria-label="Remove content as spam" \n data-mod-action="${I.RemoveContentAsSpam}" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${s({attributes:{"aria-hidden":"true"},size:o.Small})}</span>\n <span slot="text">\n Spam\n </span>\n </mod-action-button>\n `:null}renderFlairAction(){return this.isPost&&this.shouldShowActionInline?t` <mod-action-button \n aria-label="Open post flair modal" \n data-mod-action="${I.OpenEditPostFlairModal}" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${n({attributes:{"aria-hidden":"true"},size:o.Small})}</span>\n <span slot="text">\n Flair\n </span>\n </mod-action-button>`:null}getAddRemovalReasonButtonAppearance(){return this.isCompactView&&this.borderedActionBar?"bordered":"secondary"}renderAddRemovalReasonAction(){return(this.isModMode||this.isOnModqueuePage)&&this.itemType!==S.Award&&H(this.moderationState,this.hasRemovalReason,this.isSpamFilteredPost,this.isProfilePost)?t`\n <mod-action-button \n aria-label="Add removal reason" \n data-mod-action="${I.AddRemovalReason}" \n button-appearance="${this.getAddRemovalReasonButtonAppearance()}" \n ?show-full-buttons="${!0}" \n>\n <span slot="icon" class="flex justify-center" \n>${a({attributes:{"aria-hidden":"true"},size:o.Small})}</span>\n <span slot="text">\n Add removal reason\n </span>\n </mod-action-button>\n ${this.isIconOnly?t`<div class="separator"></div>`:null}\n `:null}renderCopyLinkAction(){return this.shouldShowActionInline?this.isPost?t`<shreddit-post-share-button \n ?use-button="${!0}" \n ?is-desktop-viewport="${this.isDesktopViewport}" \n permalink="${this.permalink}" \n size="${k.Small}" \n ?show-full-buttons="${!this.isIconOnly}" \n></shreddit-post-share-button>`:t`<shreddit-comment-share-button \n slot="comment-share" \n ?use-button="${!0}" \n ?is-desktop-viewport="${this.isDesktopViewport}" \n permalink="${this.permalink}" \n ?show-full-buttons="${!this.isIconOnly}" \n></shreddit-comment-share-button>`:null}renderLockAction(){if(!this.shouldShowActionInline||this.isLocked)return null;const e="Lock";return t` <mod-action-button \n aria-label="${e}" \n data-mod-action="${I.Lock}" \n event-noun="lock" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${r({attributes:{"aria-hidden":"true"},size:o.Small})}\n </span>\n <span slot="text"> ${e} </span>\n </mod-action-button>`}renderUnlockAction(){if(!this.shouldShowActionInline||!this.isLocked)return null;const e="Unlock";return t` <mod-action-button \n aria-label="${e}" \n data-mod-action="${I.Unlock}" \n event-noun="unlock" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${d({attributes:{"aria-hidden":"true"},size:o.Small})}\n </span>\n <span slot="text"> ${e} </span>\n </mod-action-button>`}renderStickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||this.isStickied||this.areHighlightsEnabled)return null;const e="Sticky";return t` <mod-action-button \n aria-label="${e}" \n data-mod-action="${I.Sticky}" \n event-noun="sticky" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${l({attributes:{"aria-hidden":"true"},size:o.Small})}\n </span>\n <span slot="text"> ${e} </span>\n </mod-action-button>`}renderUnstickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.isStickied||this.areHighlightsEnabled)return null;const e="Unsticky";return t` <mod-action-button \n aria-label="${e}" \n data-mod-action="${I.Unsticky}" \n event-noun="unsticky" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${c({attributes:{"aria-hidden":"true"},size:o.Small})}\n </span>\n <span slot="text"> ${e} </span>\n </mod-action-button>`}renderAddToHighlightsAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.areHighlightsEnabled||!P.has(this.viewContext)||this.isHighlighted)return null;const e="Add to highlights";return t` <mod-action-button \n aria-label="${e}" \n data-mod-action="${I.UpdateHighlightedPost}" \n event-noun="highlight" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${l({attributes:{"aria-hidden":"true"},size:o.Small})}\n </span>\n <span slot="text"> ${e} </span>\n </mod-action-button>`}renderRemoveFromHighlightsAction(){if(!(this.isStickyable&&this.shouldShowActionInline&&this.areHighlightsEnabled&&P.has(this.viewContext)&&this.isHighlighted))return null;const e="Remove from highlights";return t` <mod-action-button \n aria-label="${e}" \n data-mod-action="${I.RemoveHighlightedPost}" \n event-noun="unhighlight" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${c({attributes:{"aria-hidden":"true"},size:o.Small})}\n </span>\n <span slot="text"> ${e} </span>\n </mod-action-button>`}render(){return t`\n ${this.renderAddRemovalReasonAction()} ${this.renderApproveAction()}\n ${this.renderRemoveAction()} ${this.renderConfirmRemovalAction()} ${this.renderSpamAction()}\n ${this.renderFlairAction()} ${this.renderLockAction()} ${this.renderUnlockAction()}\n ${this.renderCopyLinkAction()} ${this.renderStickyAction()} ${this.renderUnstickyAction()}\n ${this.renderAddToHighlightsAction()} ${this.renderRemoveFromHighlightsAction()}\n `}};F.styles=[$,h`:host{display:flex;gap:var(--spacer-xs)}.separator{border-left:1px solid rgb(0,0,0,.1);width:1px;height:32px}`],p([m({type:String,attribute:"thing-id"})],F.prototype,"thingId",void 0),p([m({type:String,attribute:"feed-view-type"})],F.prototype,"feedViewType",void 0),p([m({type:String,attribute:"view-context"})],F.prototype,"viewContext",void 0),p([m({type:String,attribute:"item-state"})],F.prototype,"itemState",void 0),p([m({type:Boolean,attribute:"has-reports"})],F.prototype,"hasReports",void 0),p([m({type:Boolean,attribute:"mod-mode"})],F.prototype,"isModMode",void 0),p([m({type:Boolean,attribute:"removed"})],F.prototype,"isRemoved",void 0),p([m({type:Boolean,attribute:"deleted"})],F.prototype,"isDeleted",void 0),p([m({type:Boolean,attribute:"locked"})],F.prototype,"isLocked",void 0),p([m({type:Boolean,attribute:"stickied"})],F.prototype,"isStickied",void 0),p([m({type:Boolean,attribute:"highlighted"})],F.prototype,"isHighlighted",void 0),p([m({type:Boolean,attribute:"current-user-author"})],F.prototype,"isCurrentUserAuthor",void 0),p([m({type:Boolean,attribute:"has-parent"})],F.prototype,"hasParent",void 0),p([m({type:Boolean,attribute:"icon-only"})],F.prototype,"isIconOnly",void 0),p([m({type:Boolean,attribute:"has-removal-reason"})],F.prototype,"hasRemovalReason",void 0),p([m({type:String,attribute:"permalink"})],F.prototype,"permalink",void 0),p([m({type:Boolean,attribute:"is-desktop-viewport"})],F.prototype,"isDesktopViewport",void 0),p([m({type:Boolean,attribute:"is-spam-filtered-post"})],F.prototype,"isSpamFilteredPost",void 0),p([m({type:Boolean,attribute:"is-profile-post"})],F.prototype,"isProfilePost",void 0),p([m({type:Boolean,attribute:"is-promoted-post"})],F.prototype,"isPromotedPost",void 0),p([m({type:Boolean,attribute:"has-flair-permissions"})],F.prototype,"hasFlairPermissions",void 0),p([m({type:Boolean,attribute:"highlights-enabled"})],F.prototype,"areHighlightsEnabled",void 0),p([m({type:Boolean,attribute:"bordered-action-bar"})],F.prototype,"borderedActionBar",void 0),p([m({type:Boolean,attribute:"hide-inline-actions"})],F.prototype,"hideInlineActions",void 0),p([u()],F.prototype,"moderationState",void 0),F=p([v("shreddit-mod-inline-actions")],F);const L=R(b);let W=class extends L{constructor(){super(...arguments),this.parentOfModVerdictSlotElementWidth=0,this.removed=!1,this.thingId="",this.shouldIgnoreParentWidth=!1,this.minWidthToShowLabel=460,this.onCommentUpdateAction=t=>{if(t.commentId!==this.thingId)return;const{action:e}=t;switch(e){case x.approve:this.removed=!1;break;case x.remove:case x.removeAsSpam:case x.confirmRemoval:this.removed=!0}},this.onPostUpdateAction=t=>{if(t.postId!==this.thingId)return;const{action:e}=t;switch(e){case M.approve:this.removed=!1;break;case M.remove:case M.removeAsSpam:case M.confirmRemoval:this.removed=!0}},this.onAwardOnContentUpdateAction=t=>{if(t.awardOnContentId!==this.thingId)return;const{action:e}=t;switch(e){case j.approve:this.removed=!1;break;case j.remove:case j.confirmRemoval:this.removed=!0}}}connectedCallback(){super.connectedCallback(),this.initializeResizeObserver(),this.subscribe(w.PostUpdated,this.onPostUpdateAction),this.subscribe(w.CommentUpdated,this.onCommentUpdateAction),this.subscribe(w.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}disconnectedCallback(){this.cleanupResizeObserver(),super.disconnectedCallback(),this.unsubscribe(w.PostUpdated,this.onPostUpdateAction),this.unsubscribe(w.CommentUpdated,this.onCommentUpdateAction),this.unsubscribe(w.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}initializeResizeObserver(){this.parentOfModVerdictSlotElement=this.closest('[slot="mod-verdict"]')?.parentElement,this.parentOfModVerdictSlotElement&&(this.resizeObserver=new ResizeObserver((t=>{for(const e of t)this.parentOfModVerdictSlotElementWidth=e.contentRect.width})),this.resizeObserver.observe(this.parentOfModVerdictSlotElement))}cleanupResizeObserver(){this.resizeObserver&&this.parentOfModVerdictSlotElement&&this.resizeObserver.unobserve(this.parentOfModVerdictSlotElement)}render(){return t`\n <span class="inline-flex items-center gap-xs text-12 text-neutral-content w-full">\n <div class="relative">\n <slot name="verdict-indicator-avatar"></slot>\n <div \n aria-hidden="true" \n class="absolute bottom-0 -right-px flex justify-center items-center h-md w-md rounded-full border-solid border-md border-neutral-background scale-75 origin-bottom-right translate-y-px ${this.removed?"bg-red-200 text-red-700":"bg-kiwigreen-200 text-kiwigreen-700"}" \n>\n ${this.removed?y({size:o.ExtraSmall}):f({size:o.ExtraSmall})}\n </div>\n </div>\n ${this.shouldShowLabel?t`<slot name="verdict-indicator-label"></slot>`:""}\n </span>\n `}get shouldShowLabel(){return this.shouldIgnoreParentWidth||this.parentOfModVerdictSlotElementWidth>=this.minWidthToShowLabel}};W.styles=[$],p([u()],W.prototype,"parentOfModVerdictSlotElementWidth",void 0),p([u()],W.prototype,"parentOfModVerdictSlotElement",void 0),p([m({type:Boolean,reflect:!0})],W.prototype,"removed",void 0),p([m({type:String,attribute:"thing-id"})],W.prototype,"thingId",void 0),p([m({type:Boolean,attribute:"ignore-parent-width"})],W.prototype,"shouldIgnoreParentWidth",void 0),W=p([v("mod-verdict-indicator-component")],W);let q=class extends b{constructor(){super(...arguments),this.iconOnly=!1,this.pubsub=new C(this),this.handleCommentUpdate=({commentId:t,action:e,value:o})=>{if(t===this.thingId)switch(e){case x.addRemovalReason:this.hasRemovalReason=Boolean(o);break;case x.approve:this.hasRemovalReason=!0,this.isRemoved=!1;break;case x.remove:case x.removeAsSpam:this.hasRemovalReason=!1,this.isRemoved=!0}},this.handlePostUpdate=({postId:t,action:e,value:o})=>{if(t===this.thingId)switch(e){case M.addRemovalReason:this.hasRemovalReason=Boolean(o);break;case M.approve:this.hasRemovalReason=!0,this.isRemoved=!1;break;case M.remove:case M.removeAsSpam:this.isRemoved=!0,this.hasRemovalReason=!1}},this.updateModVerdict=t=>{const e=this.closest('[slot="mod-verdict"]');t&&this.isRemoved?e?.setAttribute("show-removal-reason-cta",""):e?.removeAttribute("show-removal-reason-cta")},this.shouldShowCta=()=>{const t=this.isRemoved?B.REMOVED:B.UNMODERATED;return H(t,!!this.hasRemovalReason,!!this.isContentSpamFilteredPost,this.isProfilePost)}}connectedCallback(){super.connectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver=new ResizeObserver((t=>{for(const e of t)e.contentRect.width<500?this.iconOnly=!0:this.iconOnly=!1})),this.resizeObserver.observe(t),this.pubsub.subscribe(w.CommentUpdated,this.handleCommentUpdate),this.pubsub.subscribe(w.PostUpdated,this.handlePostUpdate),this.updateModVerdict(!this.hasRemovalReason)}disconnectedCallback(){super.disconnectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver.unobserve(t),this.resizeObserver.disconnect(),this.pubsub.unsubscribe(w.CommentUpdated,this.handleCommentUpdate),this.pubsub.unsubscribe(w.PostUpdated,this.handlePostUpdate)}updated(t){super.updated(t),t.has("hasRemovalReason")&&this.updateModVerdict(!this.hasRemovalReason)}render(){return this.hasRemovalReason||!this.shouldShowCta()?g:t`\n <mod-action-button \n aria-label="Add removal reason" \n data-mod-action="${I.AddRemovalReason}" \n button-appearance="secondary" \n ?show-full-buttons="${!0}" \n>\n <span slot="icon" class="flex justify-center">\n ${a({attributes:{"aria-hidden":"true"},size:o.Small})}\n </span>\n <span slot="text" class="flex">\n ${this.iconOnly?a({attributes:{"aria-hidden":"true"},size:o.Small}):"Add removal reason"}\n </span>\n </mod-action-button>\n `}};q.styles=[$],p([m({type:String,attribute:"thing-id"})],q.prototype,"thingId",void 0),p([m({type:Boolean,attribute:"has-removal-reason"})],q.prototype,"hasRemovalReason",void 0),p([u()],q.prototype,"iconOnly",void 0),p([m({type:Boolean,attribute:"is-removed"})],q.prototype,"isRemoved",void 0),p([m({type:Boolean,attribute:"is-content-spam-filtered-post"})],q.prototype,"isContentSpamFilteredPost",void 0),p([m({type:Boolean,attribute:"is-profile-post"})],q.prototype,"isProfilePost",void 0),q=p([v("responsive-add-removal-reason-cta")],q);
//# sourceMappingURL=mod-inline-actions-client-js-b452729f.js.map
